/*
Problem Description

Given a string A of size N.

Return the string A after reversing the string word by word.

NOTE:

A sequence of non-space characters constitutes a word.
Your reversed string should not contain leading or trailing spaces, even if it is present in the input string.
If there are multiple spaces between words, reduce them to a single space in the reversed string.


Problem Constraints
1 <= N <= 3 * 105



Input Format
The only argument given is string A.



Output Format
Return the string A after reversing the string word by word.



Example Input
Input 1:
    A = "the sky is blue"
Input 2:
    A = "this is ib"  


Example Output
Output 1:
    "blue is sky the"
Output 2:
    "ib is this"    


Example Explanation
Explanation 1:
    We reverse the string word by word so the string becomes "the sky is blue".
Explanation 2:
    We reverse the string word by word so the string becomes "this is ib".
*/


string Solution::solve(string A) {
    int l=A.length();
    int i=0;
    
    string B="";
    int check=1;
    while(A[i])
    {
        if(A[i]!=' ')
        {
           check=0;
           B+=A[i];
           //cout<<i<<" "<<A[i]<<endl;
        }
        else if(A[i]==' ' && check==0)
        {
           B+=' ';
           check=1;
           //cout<<i<<"->"<<A[i]<<endl;
        }
        i++;
    }
    
    if(B[B.length()-1]==' ')
        B.erase(B.length()-1,1);
    
    
    /*for(int i=0;i<B.length()-1;i++)
    {
        //cout<<B[i];
        if(B[i]==' ' && B[i]==B[i+1])
            cout<<"\nIssue : "<<i<<endl;
    }*/
        
    //cout<<endl;
   // cout<<"length1 : "<<B.length()<<endl;
    i=0;
    int start=0;
    while(B[i])
    {
        i++;
        if(B[i]=='\0')
        {
            reverse(B.begin()+start,B.begin()+i);
        }
        else if(B[i]==' ')
        {
            reverse(B.begin()+start,B.begin()+i);
            start=i+1;
        }
    }
    
    reverse(B.begin(),B.end());
    
   //cout<<"length2 : "<<B.length()<<endl;
    
    return B;
}
