/*
SUMMATION

Problem Description

Given an integer A.

Calculate the sum = (ACr) * (r) * (r - 1) * (2r-2) for all r from 0 to A.

Return sum % 109 + 7.



Problem Constraints

2 <= A <= 106



Input Format

The first and only argument given is the integer A.



Output Format

Return a single integer denoting sum % 109 + 7.



Example Input

Input 1:

 A = 3
Input 2:

 A = 4


Example Output

Output 1:

 18
Output 2:

 108


Example Explanation

Explaination 1:

 (ACr) * (r) * (r - 1) * (2r-2)
 r = 0, (1) * (0) * (1) * (1/4) = 0
 r = 1, (3) * (1) * (0) * (1/2) = 0
 r = 2, (3) * (2) * (1) * (1) = 6
 r = 3, (1) * (3) * (2) * (2) = 12
 sum = 18
 
 */
 
 long long int fastExp(long long int a, long long int b, long long int c)
{
    if(b==0)
        return 1;
    
    if(b%2==0)
    {
        return fastExp((a*a)%c, b/2, c);
    }
    else
    {
        return (a*fastExp((a*a)%c, (b-1)/2, c))%c;
    }
}
int Solution::solve(int A) {
    /* Formula summation of nCr* 2^r => 3^r
    where o<=r<=n

    using this to simplify ours: we have 2^(r-2)
    (n-2)C(r-2) * 2^(r-2) => 3^(n-2)

    also (n-2)C(r-2) => (n-2)!/((n-r)!*(r-2)!)

    we need to convert (nCr) * (r) * (r - 1) * (2^r-2) such that we use above

    n*n-1*(n-2)! * r*(r-1)* (2^r-2)
    -----------
    (n-r)! * r*(r-1) * (r-2)!

    on simplifying

    n*n-1* (n-2)C(r-2) * (2^r-2)
    which becomes n*n-1*3^(r-2);

    on summation it becomes n*n-1*3^(n-2) */

    if(A < 2)
        return 0;
    long long int m=1000000007;
    return ((A*(A-1))%m * fastExp(3,A-2,m))%m;
}
