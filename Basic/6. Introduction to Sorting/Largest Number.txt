/*
Problem Description

Given a array A of non negative integers, arrange them such that they form the largest number.

Note: The result may be very large, so you need to return a string instead of an integer.



Problem Constraints
1 <= len(A) <= 100000
0 <= A[i] <= 2*109



Input Format
First argument is an array of integers.



Output Format
Return a string representing the largest number.



Example Input
Input 1:

 A = [3, 30, 34, 5, 9]
Input 2:

 A = [2, 3, 9, 0]


Example Output
Output 1:

 "9534330"
Output 2:

 "9320"


Example Explanation
Explanation 1:

 A = [3, 30, 34, 5, 9]
 Reorder the numbers to [9, 5, 34, 3, 30] to form the largest number.
Explanation 2:

 Reorder the numbers to [9, 3, 2, 0] to form the largest number 9320. 
*/

bool mycompare(string a, string b)
{
    string a1=a+b;
    string a2=b+a;
    if(a2.compare(a1) > 0)
        return false;
        
    return true;
}
string Solution::largestNumber(const vector<int> &A) {
    vector<string> ans;
    int l=A.size();
    int ch=0;
    for(int i=0;i<l;i++)
    {
        if(A[i]!=0)
            ch=1;
        ans.push_back(to_string(A[i]));
    }
    if(ch==0)
    {
        //string answer="0";
        return "0";
    }
    sort(ans.begin(),ans.end(),mycompare);
    
    string answer="";
    for(int i=0;i<l;i++)
    {
        //cout<<ans[i]<<" ";
        answer+=ans[i];
    }
    return answer;
}
