/*
Problem Description

You are given an array A of N elements. You have to make all elements unique, to do so in one step you can increase any number by one.

Find the minimum number of steps.



Problem Constraints
1 <= N <= 105
1 <= A[i] <= 109



Input Format
The only argument given is an Array A, having N integers.



Output Format
Return the Minimum number of steps required to make all elements unique.



Example Input
Input 1:

 A = [1, 1, 3]
Input 2:

 A = [2, 4, 5]


Example Output
Output 1:

 1
Output 2:

 0


Example Explanation
Explanation 1:

 We can increase the value of 1st element by 1 in 1 step and will get all unique elements. i.e [2, 1, 3].
Explanation 2:

 All elements are distinct.
*/

int Solution::solve(vector<int> &A) {
    sort(A.begin(),A.end());
	long long int sum=0;
    int l=A.size();
	
	vector<int> vec;
	for(int i=0;i<l;i++)
    {
       vec.push_back(A[i]);
    }
	/*for(int i=0;i<l;i++)
    {
       cout<<A[i]<<" ";
    }
    cout<<endl;*/
	int prev=A[0];
    for(int i=1;i<l;i++)
    {
        if(A[i]<=prev)
		{
			A[i]=prev+1;
		}
		prev=A[i];
		sum+=A[i]-vec[i];
    }
    /*for(int i=0;i<l;i++)
    {
       cout<<A[i]<<" ";
    }
    cout<<endl;*/
    return sum;
    
}
