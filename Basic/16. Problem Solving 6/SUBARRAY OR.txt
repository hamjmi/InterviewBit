/*
Problem Description

Given an array of integers A of size N.

Value of a subarray is defined as BITWISE OR of all elements in it.

Return the sum of Value of all subarrays of A % 109 + 7.



Problem Constraints
1 <= N <= 105

1 <= A[i] <= 108



Input Format
The first argument given is the integer array A.



Output Format
Return the sum of Value of all subarrays of A % 109 + 7.



Example Input
Input 1:

 A = [1, 2, 3, 4, 5]
Input 2:

 A = [7, 8, 9, 10]


Example Output
Output 1:

 71
Output 2:

 110


Example Explanation
Explanation 1:

 Value([1]) = 1
 Value([1, 2]) = 3
 Value([1, 2, 3]) = 3
 Value([1, 2, 3, 4]) = 7
 Value([1, 2, 3, 4, 5]) = 7
 Value([2]) = 2
 Value([2, 3]) = 3
 Value([2, 3, 4]) = 7
 Value([2, 3, 4, 5]) = 7
 Value([3]) = 3
 Value([3, 4]) = 7
 Value([3, 4, 5]) = 7
 Value([4]) = 4
 Value([4, 5]) = 5
 Value([5]) = 5
 Sum of all these values = 71
Explanation 2:

 Sum of value of all subarray is 110.
*/

long long int pow(long long int current, long long int power, long long int m)
{
    for(int i=0;i<power;i++)
    {
        current=(long long int)(current*2)%m;
    }
    return current;
}
int Solution::solve(vector<int> &A) {
    long long int n= A.size();
    long long int m= 1000000007;
    long long int sum=0;
   
    int bin[n][32];
    for(int i=0;i<32;i++)
    {
        for(int j=0;j<n;j++)
        {
            int temp= 1 << i;
            int val = A[j] & temp;
            if(val > 0)
                bin[j][i]=1;
            else
                bin[j][i]=0;
        }
    }

    long long int tot;
    if(n%2==0)
        tot=((n/2)*(n+1))%m;
    else
        tot=(((n+1)/2)*(n))%m;
    
    for(int i=0;i<32;i++)
    {
        long long int current=tot;
        long long int curr=0;
        for(int j=0;j<n;j++)
        {
            if(bin[j][i]==0)
                curr++;
            else if(curr!=0)
            {
                /*if(curr%2==0)
                    current=(long long int)(current-(long long int)((curr/2)*(curr+1)));
                else
                   current=(long long int)(current-(long long int)((curr+1)/2)*(curr));*/
				current= (current -(((curr)*(curr+1))%m)/2 +m)%m;
				   
                curr=0;
            }
        }
        if(curr)
        {
            /*if(curr%2==0)
                    current=(long long int)(current-(long long int)((curr/2)*(curr+1)));
            else
                   current=(long long int)(current-(long long int)((curr+1)/2)*(curr));*/
			current= (current -(((curr)*(curr+1))%m)/2 +m)%m;
        }
        if(current!=0)
		{
			sum=(sum+pow(current,i,m))%m;
			//sum=(sum+current*(1<<i)%m)%m;
		}
            
    }
    
    
    return sum;
}
