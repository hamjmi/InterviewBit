/*
Determine if a Sudoku is valid, according to: http://sudoku.com.au/TheRules.aspx

The Sudoku board could be partially filled, where empty cells are filled with the character '.'.


The input corresponding to the above configuration :

["53..7....", "6..195...", ".98....6.", "8...6...3", "4..8.3..1", "7...2...6", ".6....28.", "...419..5", "....8..79"]
A partially filled sudoku which is valid.

 Note:
A valid Sudoku board (partially filled) is not necessarily solvable. Only the filled cells need to be validated.
Return 0 / 1 ( 0 for false, 1 for true ) for this problem
*/

int Solution::isValidSudoku(const vector<string> &A) {
    int row[9][10]={0};
    int col[9][10]={0};
    int box[9][10]={0};
    
    int l=A.size();
    int x,y,temp;
    for(int i=0;i<l;i++)
    {
        for(int j=0;j<l;j++)
        {
            if(A[i][j]!='.')
            {
                row[i][A[i][j]-'0']++;
                col[j][A[i][j]-'0']++;
                
                x=i/3;y=j/3;
                temp=3*x+y;
                box[temp][A[i][j]-'0']++;
                
                //cout<<i<<" "<<j<<" "<<row[i][A[i][j]-'0']<<" "<<col[j][A[i][j]-'0']<<" "<<temp<<endl;
                if(row[i][A[i][j]-'0']>1)
                    return 0;
                    
                if(col[j][A[i][j]-'0']>1)
                    return 0;
                    
                if(box[temp][A[i][j]-'0']>1)
                    return 0;
            }
        }
    }
    
    
    
    return 1;
}
