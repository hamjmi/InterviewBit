/*
Ath Magical Number

Problem Description

Given three positive integers A, B and C.

Any positive integer is magical if it is divisible by either B or C.

Return the Ath magical number. Since the answer may be very large, return it modulo 109 + 7.



Problem Constraints

1 <= A <= 109

2 <= B, C <= 40000



Input Format

The first argument given is an integer A.

The second argument given is an integer B.

The third argument given is an integer C.



Output Format

Return the Ath magical number. Since the answer may be very large, return it modulo 109 + 7.



Example Input

Input 1:

 A = 1
 B = 2
 C = 3
Input 2:

 A = 4
 B = 2
 C = 3


Example Output

Output 1:

 2
Output 2:

 6


Example Explanation

Explanation 1:

 1st magical number is 2.
Explanation 2:

 First four magical numbers are 2, 3, 4, 6 so the 4th magical number is 6.
 
 */
 
 int gcd(int B, int C)
{
	if (C == 0)
		return B;
	return gcd(C, B % C);
}
int Solution::solve(int A, int B, int C) {
	long long int low = min(B, C);
	long long int high = (long long int)A * low;
	long long int m = 1000000007;
	if (max(B,C) % min(B,C)==0)
		return high % m;

	
	while (low <= high)
	{
		long long int mid = (low + high) / 2;
		long long int count = 0;
		count -= mid / ((B * C)/gcd(B,C));
		count += mid / B;
		count += mid / C;
		
		if (count == A && (mid % B == 0 || mid % C == 0))
		{
			return mid % m;
		}
		else if (count < A)
		{
			low = mid + 1;
		}
		else
		{
			high = mid - 1;
		}
	}

}
